This README file contains information on the contents of the meta-noob-kernel-dev layer.

Please see the corresponding sections below for details.

Thought Process
===============
Let's use a popular embedded Linux SBC as a TRUE development board for software development,
in our case kernel device-driver development and user-space applications.
We setup a basic Yocto build that can compile Linux images for the Raspberry Pi board using meta-raspberrypi.
But it does not have all the stuff(compiler, editor, tools etc) we need to start developing drivers on the target natively.
Here we are, with our custom layer which add all the required tools to build a basic device driver on the target(Raspberry Pi) itself.

You can build and flash this image once, you're ready to experimenting Linux kernel device driver ON the RaspbberyPi board FOR the RaspberryPi board.

Enjoy!

Dependencies
============

  URI: meta-raspberrypi
  branch: Latest

Patches
=======

Please submit any patches against the meta-noob-kernel-dev layer by creating an issue and PR to this GitHub repo.

Maintainer: dixitparmar19

Table of Contents
=================

  I. Adding the meta-noob-kernel-dev layer to your build
 II. How to build the image
III. How to flash the .wic image


I. Adding the meta-noob-kernel-dev layer to your build
======================================================

Run 'bitbake-layers add-layer meta-noob-kernel-dev'

II. How to build the image
==========================
	cd <your workspace>/poky
	Clone this Layer:
		git clone git@github.com:dixitparmar19/meta-noob-kernel-dev.git
		OR
		git clone https://github.com/dixitparmar19/meta-noob-kernel-dev.git
	Build Commands:
		export TEMPLATECONF="$(pwd)/meta-noob-kernel-dev/conf/templates/sample"
		source oe-init-build-env build-rpi
		bitbake rpi-kernel-dev-image

III. How to flash the wic image
===============================
	Unzip the generated bzip2.wic file:
		bzip2 -d -f rpi-kernel-dev-image-raspberrypi4.rootfs.wic.bz2

	Format the SD-Card:
		I use gparted utility and device name for me is /dev/sdb it could be different for you.
		Use this block device name. Use it in the dd command below

	Copy the image to SD card using dd:
		sudo dd if=rpi-kernel-dev-image-raspberrypi4.rootfs.wic of=/dev/sdb bs=4M status=progress

IV. Making RaspberryPi ready to compile the kernel modules(Most important)
==========================================================
	Once your raspberryPi boots with the image we just created.
	Go to <rpi console> and execute below commands:
	cd /usr/src/kernel
	make scripts prepare
